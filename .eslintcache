[{"C:\\Users\\aqrab\\OneDrive\\Desktop\\thesis project\\front-end-react-website\\src\\index.js":"1","C:\\Users\\aqrab\\OneDrive\\Desktop\\thesis project\\front-end-react-website\\src\\App.js":"2","C:\\Users\\aqrab\\OneDrive\\Desktop\\thesis project\\front-end-react-website\\src\\reducers\\reducer.js":"3","C:\\Users\\aqrab\\OneDrive\\Desktop\\thesis project\\front-end-react-website\\src\\reducers\\index.js":"4","C:\\Users\\aqrab\\OneDrive\\Desktop\\thesis project\\front-end-react-website\\src\\components\\Profile\\admin.js":"5","C:\\Users\\aqrab\\OneDrive\\Desktop\\thesis project\\front-end-react-website\\src\\components\\Profile\\Sign.js":"6","C:\\Users\\aqrab\\OneDrive\\Desktop\\thesis project\\front-end-react-website\\src\\components\\Profile\\user.js":"7","C:\\Users\\aqrab\\OneDrive\\Desktop\\thesis project\\front-end-react-website\\src\\components\\ListItems\\admin.js":"8","C:\\Users\\aqrab\\OneDrive\\Desktop\\thesis project\\front-end-react-website\\src\\components\\ListItems\\SellerItems.js":"9","C:\\Users\\aqrab\\OneDrive\\Desktop\\thesis project\\front-end-react-website\\src\\components\\ListItems\\addItems.js":"10","C:\\Users\\aqrab\\OneDrive\\Desktop\\thesis project\\front-end-react-website\\src\\actions\\index.js":"11","C:\\Users\\aqrab\\OneDrive\\Desktop\\thesis project\\front-end-react-website\\src\\Api\\index.js":"12","C:\\Users\\aqrab\\OneDrive\\Desktop\\thesis project\\front-end-react-website\\src\\reducers\\authReducer.js":"13","C:\\Users\\aqrab\\OneDrive\\Desktop\\thesis project\\front-end-react-website\\src\\reducers\\authInReducer.js":"14","C:\\Users\\aqrab\\OneDrive\\Desktop\\thesis project\\front-end-react-website\\src\\reducers\\profiles.js":"15","C:\\Users\\aqrab\\OneDrive\\Desktop\\thesis project\\front-end-react-website\\src\\components\\ListItems\\EditItems.js":"16","C:\\Users\\aqrab\\OneDrive\\Desktop\\thesis project\\front-end-react-website\\src\\components\\Profile\\firbase.js":"17","C:\\Users\\aqrab\\OneDrive\\Desktop\\thesis project\\front-end-react-website\\src\\components\\Navbar\\itemsNav.js":"18","C:\\Users\\aqrab\\OneDrive\\Desktop\\thesis project\\front-end-react-website\\src\\components\\Navbar\\addNav.js":"19","C:\\Users\\aqrab\\OneDrive\\Desktop\\thesis project\\front-end-react-website\\src\\components\\Navbar\\profileNav.js":"20","C:\\Users\\aqrab\\OneDrive\\Desktop\\thesis project\\front-end-react-website\\src\\components\\Navbar\\homeNav.js":"21","C:\\Users\\aqrab\\OneDrive\\Desktop\\thesis project\\front-end-react-website\\src\\ProtectedRoute.js":"22","C:\\Users\\aqrab\\OneDrive\\Desktop\\thesis project\\front-end-react-website\\src\\components\\HomePage\\homepage.js":"23","C:\\Users\\aqrab\\OneDrive\\Desktop\\thesis project\\front-end-react-website\\src\\components\\View\\view.js":"24"},{"size":542,"mtime":1608821139914,"results":"25","hashOfConfig":"26"},{"size":3815,"mtime":1608823665806,"results":"27","hashOfConfig":"26"},{"size":353,"mtime":1608815236056,"results":"28","hashOfConfig":"26"},{"size":410,"mtime":1608715298613,"results":"29","hashOfConfig":"26"},{"size":1200,"mtime":1608715298609,"results":"30","hashOfConfig":"26"},{"size":15600,"mtime":1608823391371,"results":"31","hashOfConfig":"26"},{"size":1676,"mtime":1608823042171,"results":"32","hashOfConfig":"26"},{"size":1189,"mtime":1608821900004,"results":"33","hashOfConfig":"26"},{"size":1406,"mtime":1608822114881,"results":"34","hashOfConfig":"26"},{"size":5575,"mtime":1608822055134,"results":"35","hashOfConfig":"26"},{"size":3500,"mtime":1608821595275,"results":"36","hashOfConfig":"26"},{"size":756,"mtime":1608818799378,"results":"37","hashOfConfig":"26"},{"size":228,"mtime":1608715298612,"results":"38","hashOfConfig":"26"},{"size":233,"mtime":1608721346525,"results":"39","hashOfConfig":"26"},{"size":345,"mtime":1608715298613,"results":"40","hashOfConfig":"26"},{"size":3647,"mtime":1608817327414,"results":"41","hashOfConfig":"26"},{"size":621,"mtime":1608745394662,"results":"42","hashOfConfig":"26"},{"size":463,"mtime":1608822250058,"results":"43","hashOfConfig":"26"},{"size":483,"mtime":1608822226137,"results":"44","hashOfConfig":"26"},{"size":468,"mtime":1608822261298,"results":"45","hashOfConfig":"26"},{"size":633,"mtime":1608822239782,"results":"46","hashOfConfig":"26"},{"size":413,"mtime":1608823504407,"results":"47","hashOfConfig":"26"},{"size":338,"mtime":1608821919604,"results":"48","hashOfConfig":"26"},{"size":415,"mtime":1608823082554,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1fqf7bj",{"filePath":"52","messages":"53","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"62","messages":"63","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"57"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"57"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"57"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"99","usedDeprecatedRules":"57"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\aqrab\\OneDrive\\Desktop\\thesis project\\front-end-react-website\\src\\index.js",[],"C:\\Users\\aqrab\\OneDrive\\Desktop\\thesis project\\front-end-react-website\\src\\App.js",["104","105","106","107","108","109","110","111","112","113"],"C:\\Users\\aqrab\\OneDrive\\Desktop\\thesis project\\front-end-react-website\\src\\reducers\\reducer.js",["114"]," const Items = (state = [], action) => {\r\n    switch (action.type) {\r\n      case \"FETCH_ALL\":\r\n       return action.payload;\r\n       case \"CREATE\":\r\n      return [...state, action.payload];\r\n      case \"UPDATE\":\r\n      return action.payload;\r\n      case \"DELETE\":\r\n       \r\n      default:\r\n        return state;\r\n\r\n    }\r\n  };\r\n\r\n  export default Items;",["115","116"],"C:\\Users\\aqrab\\OneDrive\\Desktop\\thesis project\\front-end-react-website\\src\\reducers\\index.js",[],"C:\\Users\\aqrab\\OneDrive\\Desktop\\thesis project\\front-end-react-website\\src\\components\\Profile\\admin.js",[],"C:\\Users\\aqrab\\OneDrive\\Desktop\\thesis project\\front-end-react-website\\src\\components\\Profile\\Sign.js",["117"],"import React, {useState,useEffect} from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport { createUser } from '../../actions/index';\r\nimport { checkUser } from '../../actions/index';\r\nimport { storage } from './firbase'\r\nconst Sign = ({ currentId }) => {\r\n  ///this is for sign up\r\n  const [userData, setUserData] = useState({  username: '', email: '', password: '', phoneNumber: '', location: '', iBan: ''});\r\n  ////this is for sign in\r\n    const [savedUserData, setSavedUserData] = useState({ email: '', password: ''});\r\n    const dispatch = useDispatch();\r\n   ////sigin up button\r\n    const [image, setUserImage] = useState(null)\r\n    const [savedUserData, setSavedUserData] = useState({ email: '', password: ''});\r\n    function handleChangeImage(e){\r\n    e.preventDefault();\r\n      setUserImage( e.target.files[0])      \r\n    }\r\n    /// to get the image url and save it on the firebase \r\n    const imageUpload  = async (e) => {\r\n      const imageLink = storage.ref(`images/${image.name}`).put(image)\r\n      imageLink.on(\r\n         \"state_changed\",\r\n         snapshot => {},\r\n         error => {\r\n           console.log(error)\r\n         },\r\n         () => {\r\n           \r\n           storage\r\n           .ref(\"images\")\r\n           .child(image.name)\r\n           .getDownloadURL()\r\n           .then(url => {\r\n   \r\n            userData.image = url\r\n             console.log(url)\r\n           })\r\n         })\r\n      \r\n    }\r\n\r\n\r\n    const onSubmit = async (e) => {\r\n      e.preventDefault();\r\n      /*\r\n      Input Email conditions:\r\n      @ should present.\r\n      mysite@.com.my  [tld (Top Level domain) can not start with dot \".\"]\r\n      @you.me.net [ No character before @ ]\r\n      mysite123@gmail.b [ \".b\" is not a valid tld ]\r\n      mysite@.org.org [ tld can not start with dot \".\" ]\r\n      .mysite@mysite.org [ an email should not be start with \".\" ]\r\n      mysite()*@gmail.com [ here the regular expression only allows character, digit, underscore, and dash ]\r\n      mysite..1234@yahoo.com [double dots are not allowed]\r\n       */\r\n      if ( !(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(userData.email)) ) {\r\n        alert(\"You have entered an invalid email address!\");\r\n      }\r\n      //Input Password and Submit [8 to 15 characters which contain at least one lowercase letter, one uppercase letter, one numeric digit, and one special character\r\n      else if ( !(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,15}$/.test(userData.password)) ) {\r\n        alert(\"You have entered weak password!\");\r\n      }\r\n      //Input PhoneNumber should be 10 digits with no comma, no spaces, no punctuation and there will be no + sign in front the number\r\n      else if ( !(/^\\d{10}$/.test(userData.phoneNumber)) ) {\r\n        alert(\"You have entered an invalid Phone Number!\");\r\n      }\r\n       else {\r\n        dispatch(createUser(userData));\r\n        console.log(\"userData\",userData);\r\n      }\r\n    };\r\n  ////sigin in button\r\n    const onSignIn = async (e) => {\r\n      e.preventDefault();\r\n        dispatch(checkUser(savedUserData));\r\n       \r\n          //  if (!savedUserData.email)  {\r\n          //   alert(\"empty email\")\r\n          //  }\r\n    };  \r\n\r\n  \r\n     \r\n    \r\n                \r\n      };\r\n    return (\r\n        <div>\r\n        <div>\r\n        <h1>Sign Up</h1>\r\n        <br />\r\n        <div className = \"container\">\r\n          <form className=\"text-center border border-light p-9\" action=\"#!\"  >\r\n            <p className=\"h4 mb-4\">Please register your Info</p>\r\n            <br />\r\n                <div className=\"col\">\r\n                <label>Username</label>\r\n                <input\r\n                required={true}\r\n                  type = \"text\"\r\n                  className = \"form-control\"\r\n                   value = {userData.username}\r\n                  onChange = {(e) => setUserData({ ...userData ,username : e.target.value})}\r\n                  text-align = \"center\"\r\n                  placeholder = \"Insert Name\"/>\r\n                </div>\r\n                <br />\r\n                <div className=\"col\">\r\n                <label>Email</label>\r\n                <input\r\n                required={true}\r\n                  type = \"text\"\r\n                  className = \"form-control\"\r\n                   value = {userData.email}\r\n                  onChange = {(e) => setUserData({ ...userData ,email : e.target.value})}\r\n                  text-align = \"center\"\r\n                  placeholder = \"Insert Email\"/>\r\n                </div>\r\n                <br />\r\n                <div className = \"col\">\r\n                  <label>Password</label>\r\n                  <input\r\n                    type = \"text\"\r\n                    required={true}\r\n                    className = \"form-control\"\r\n                     value = {userData.password}\r\n                  onChange = {(e) => setUserData({ ...userData ,password : e.target.value})}\r\n                    placeholder = \" Insert a password\"/>\r\n                </div>\r\n                <br/>\r\n                <div className=\"col\">\r\n                <label>Phone Number</label>\r\n                <input\r\n                required={true}\r\n                  type = \"text\"\r\n                  className = \"form-control\"\r\n                   value = {userData.phoneNumber}\r\n                  onChange = {(e) => setUserData({ ...userData ,phoneNumber : e.target.value})}\r\n                  text-align = \"center\"\r\n                  placeholder = \"Insert Phone Number\"/>\r\n                </div>\r\n              <br />\r\n              <div className=\"col\">\r\n                <label>Location</label>\r\n                <input\r\n                required={true}\r\n                  type = \"text\"\r\n                  className = \"form-control\"\r\n                   value = {userData.location}\r\n                  onChange = {(e) => setUserData({ ...userData ,location : e.target.value})}\r\n                  text-align = \"center\"\r\n                  placeholder = \"Insert Location\"/>\r\n                </div>\r\n                <br/>\r\n                <div className=\"col\">\r\n                <label>image</label>\r\n                <input \r\n                  required={true}\r\n                  type='file' \r\n                  className = \"form-control\"\r\n                  onChange = {handleChangeImage}\r\n                  />\r\n                   <button type=\"submit\" onClick= {imageUpload} className=\"btn btn-deep-orange darken-4\">upload Image</button>\r\n                </div>\r\n                <br/>\r\n                <div className=\"col\">\r\n                <label>iBan</label>\r\n                <input\r\n                required={true}\r\n                  type = \"text\"\r\n                  className = \"form-control\"\r\n                   value = {userData.iBan}\r\n                  onChange = {(e) => setUserData({ ...userData ,iBan : e.target.value})}\r\n                  text-align = \"center\"\r\n                  placeholder = \"Insert iBan\"/>\r\n                </div>\r\n                <div>\r\n                <button type=\"submit\" onClick= {onSubmit} className=\"btn btn-deep-orange darken-4\">Sign Up</button>\r\n                </div>\r\n          </form>\r\n        </div>\r\n        </div>\r\n        <div>\r\n        <h1>Sign In</h1>\r\n        <br />\r\n        <div className = \"container\">\r\n          <form className=\"text-center border border-light p-9\" action=\"#!\"  >\r\n            <p className=\"h4 mb-4\">Please enter your Info</p>\r\n                <br />\r\n                <div className=\"col\">\r\n                <label>Email</label>\r\n                <input\r\n                required={true}\r\n                  type = \"text\"\r\n                  className = \"form-control\"\r\n                   value = {savedUserData.email}\r\n                  onChange = {(e) => setSavedUserData({ ...savedUserData ,email : e.target.value})}\r\n                  text-align = \"center\"\r\n                  placeholder = \"Insert Email\"/>\r\n                </div>\r\n                <br />\r\n                <div className = \"col\">\r\n                  <label>Password</label>\r\n                  <input\r\n                    type = \"text\"\r\n                    required={true}\r\n                    className = \"form-control\"\r\n                     value = {savedUserData.password}\r\n                  onChange = {(e) => setSavedUserData({ ...savedUserData ,password : e.target.value})}\r\n                    placeholder = \" Insert a password\"/>\r\n                </div>\r\n                <div>\r\n                <button type=\"submit\" onClick= {onSignIn} className=\"btn btn-deep-orange darken-4\">Sign In</button>\r\n                </div>\r\n          </form>\r\n        </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Sign;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, {useState} from 'react';\r\n// import {useSelector} from 'react-redux';\r\n// import { useDispatch } from 'react-redux';\r\n// import { createUser } from '../../actions/index';\r\n// import { checkUser } from '../../actions/index';\r\n\r\n// const Sign = ({ currentId }) => {\r\n//     const [userData, setUserData] = useState({  username: '', email: '', password: '', phoneNumber: '', location: '', image: '', iBan: ''});\r\n//     ///////\r\n//     const [savedUserData, setSavedUserData] = useState({ email: '', password: ''});\r\n\r\n//     const dispatch = useDispatch();\r\n\r\n//     const onSubmit = async (e) => {\r\n//         e.preventDefault();\r\n    \r\n//           dispatch(createUser(userData));\r\n//           console.log(\"userData\",userData)       \r\n//       };\r\n\r\n//       /////\r\n//       const onSignIn = async (e) => {\r\n//         e.preventDefault();\r\n    \r\n//           dispatch(checkUser(savedUserData));\r\n//           console.log(\"savedUserData\",savedUserData)       \r\n//       };\r\n\r\n//     return (\r\n//         <div>\r\n//         <div>\r\n//         <h1>Sign Up</h1>\r\n//         <br />\r\n//         <div className = \"container\">\r\n//           <form className=\"text-center border border-light p-9\" action=\"#!\"  >\r\n//             <p className=\"h4 mb-4\">Please register your Info</p>\r\n//             <br />\r\n//                 <div className=\"col\">\r\n//                 <label>Username</label>\r\n//                 <input\r\n//                 required=\"true\"\r\n//                   type = \"text\"\r\n//                   className = \"form-control\"\r\n//                    value = {userData.username}\r\n//                   onChange = {(e) => setUserData({ ...userData ,username : e.target.value})}\r\n//                   text-align = \"center\"\r\n//                   placeholder = \"Insert Name\"/>\r\n//                 </div>\r\n//                 <br />\r\n//                 <div className=\"col\">\r\n//                 <label>Email</label>\r\n//                 <input\r\n//                 required=\"true\"\r\n//                   type = \"text\"\r\n//                   className = \"form-control\"\r\n//                    value = {userData.email}\r\n//                   onChange = {(e) => setUserData({ ...userData ,email : e.target.value})}\r\n//                   text-align = \"center\"\r\n//                   placeholder = \"Insert Email\"/>\r\n//                 </div>\r\n//                 <br />\r\n//                 <div className = \"col\">\r\n//                   <label>Password</label>\r\n//                   <input\r\n//                     type = \"text\"\r\n//                     required=\"true\"\r\n//                     className = \"form-control\"\r\n//                      value = {userData.password}\r\n//                   onChange = {(e) => setUserData({ ...userData ,password : e.target.value})}\r\n//                     placeholder = \" Insert a password\"/>\r\n//                 </div>\r\n//                 <br/>\r\n//                 <div className=\"col\">\r\n//                 <label>Phone Number</label>\r\n//                 <input\r\n//                 required=\"true\"\r\n//                   type = \"text\"\r\n//                   className = \"form-control\"\r\n//                    value = {userData.phoneNumber}\r\n//                   onChange = {(e) => setUserData({ ...userData ,phoneNumber : e.target.value})}\r\n//                   text-align = \"center\"\r\n//                   placeholder = \"Insert Phone Number\"/>\r\n//                 </div>\r\n//               <br />\r\n//               <div className=\"col\">\r\n//                 <label>Location</label>\r\n//                 <input\r\n//                 required=\"true\"\r\n//                   type = \"text\"\r\n//                   className = \"form-control\"\r\n//                    value = {userData.location}\r\n//                   onChange = {(e) => setUserData({ ...userData ,location : e.target.value})}\r\n//                   text-align = \"center\"\r\n//                   placeholder = \"Insert Location\"/>\r\n//                 </div>\r\n//                 <br/>\r\n//                 <div className=\"col\">\r\n//                 <label>image</label>\r\n//                 <input\r\n//                 required=\"true\"\r\n//                   type = \"text\"\r\n//                   className = \"form-control\"\r\n//                    value = {userData.image}\r\n//                   onChange = {(e) => setUserData({ ...userData ,image : e.target.value})}\r\n//                   text-align = \"center\"\r\n//                   placeholder = \"Insert Image\"/>\r\n//                 </div>\r\n//                 <br/>\r\n//                 <div className=\"col\">\r\n//                 <label>iBan</label>\r\n//                 <input\r\n//                 required=\"true\"\r\n//                   type = \"text\"\r\n//                   className = \"form-control\"\r\n//                    value = {userData.iBan}\r\n//                   onChange = {(e) => setUserData({ ...userData ,iBan : e.target.value})}\r\n//                   text-align = \"center\"\r\n//                   placeholder = \"Insert iBan\"/>\r\n//                 </div>\r\n//                 <div>\r\n//                 <button type=\"submit\" onClick= {onSubmit} className=\"btn btn-deep-orange darken-4\">Sign Up</button>\r\n//                 </div>\r\n//           </form>\r\n//         </div>\r\n//         </div>\r\n//         <div>\r\n//         <h1>Sign In</h1>\r\n//         <br />\r\n//         <div className = \"container\">\r\n//           <form className=\"text-center border border-light p-9\" action=\"#!\"  >\r\n//             <p className=\"h4 mb-4\">Please enter your Info</p>\r\n//                 <br />\r\n//                 <div className=\"col\">\r\n//                 <label>Email</label>\r\n//                 <input\r\n//                 required=\"true\"\r\n//                   type = \"text\"\r\n//                   className = \"form-control\"\r\n//                    value = {savedUserData.email}\r\n//                   onChange = {(e) => setSavedUserData({ ...savedUserData ,email : e.target.value})}\r\n//                   text-align = \"center\"\r\n//                   placeholder = \"Insert Email\"/>\r\n//                 </div>\r\n//                 <br />\r\n//                 <div className = \"col\">\r\n//                   <label>Password</label>\r\n//                   <input\r\n//                     type = \"text\"\r\n//                     required=\"true\"\r\n//                     className = \"form-control\"\r\n//                      value = {savedUserData.password}\r\n//                   onChange = {(e) => setSavedUserData({ ...savedUserData ,password : e.target.value})}\r\n//                     placeholder = \" Insert a password\"/>\r\n//                 </div>\r\n//                 <div>\r\n//                 <button type=\"submit\" onClick= {onSignIn} className=\"btn btn-deep-orange darken-4\">Sign In</button>\r\n//                 </div>\r\n//           </form>\r\n//         </div>\r\n//         </div>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default Sign;","C:\\Users\\aqrab\\OneDrive\\Desktop\\thesis project\\front-end-react-website\\src\\components\\Profile\\user.js",["118","119"],"/// the team member who is handiling this task  add delete update should add the required folders here \r\n\r\n\r\n\r\nimport React, { useEffect,useState} from 'react';\r\nimport { getUser } from '../../actions';\r\nimport { useDispatch,useSelector } from 'react-redux';\r\nimport Button from 'react-bootstrap/Button';\r\n// we are retreiving all the admin items \r\nconst UserProfile =() =>{\r\n    // we are dipatching th state\r\n    const dispatch = useDispatch();\r\n    //we are declaring a new const called items which will save all the items in it \r\n    // authInreducers\r\n    // const loggedin = useSelector(state => state.authInReducer)\r\n    var Userb=localStorage.getItem('UserId')\r\n    const [loggedin,setLoggedin] = useState(Userb)\r\n  console.log(loggedin)\r\n    const UserProfile = useSelector(state => state.Profiles)\r\n    \r\n  \r\n   \r\n  \r\n    // we are rendering the whole items instantly when we load our page \r\n    useEffect(() => {\r\n      dispatch(getUser());\r\n    }, [dispatch]);\r\n    \r\n    return (\r\n         <div>\r\n              \r\n              {UserProfile.filter (Users  => Users.userID == loggedin\r\n         ).map((Info) => (\r\n        <div style={{ border: '1px solid black', margin: \"6px\" }} >\r\n\r\n         username: {Info.username}\r\n        <br></br>\r\n        email:   {Info.email}\r\n        <br></br>\r\n        phoneNummber:  {Info.phoneNummber}\r\n        <br></br>\r\n        location:   {Info.location}\r\n        <br></br>\r\n        image:   {Info.image}\r\n        <Button variant=\"outline-primary\">Primary</Button>{' '}\r\n        </div>\r\n       \r\n          ))}\r\n           </div>\r\n    )\r\n\r\n}\r\n\r\nexport default UserProfile;\r\n","C:\\Users\\aqrab\\OneDrive\\Desktop\\thesis project\\front-end-react-website\\src\\components\\ListItems\\admin.js",["120"],"C:\\Users\\aqrab\\OneDrive\\Desktop\\thesis project\\front-end-react-website\\src\\components\\ListItems\\SellerItems.js",["121","122"],"C:\\Users\\aqrab\\OneDrive\\Desktop\\thesis project\\front-end-react-website\\src\\components\\ListItems\\addItems.js",[],"C:\\Users\\aqrab\\OneDrive\\Desktop\\thesis project\\front-end-react-website\\src\\actions\\index.js",["123","124","125"],"C:\\Users\\aqrab\\OneDrive\\Desktop\\thesis project\\front-end-react-website\\src\\Api\\index.js",[],"C:\\Users\\aqrab\\OneDrive\\Desktop\\thesis project\\front-end-react-website\\src\\reducers\\authReducer.js",[],"C:\\Users\\aqrab\\OneDrive\\Desktop\\thesis project\\front-end-react-website\\src\\reducers\\authInReducer.js",[],"C:\\Users\\aqrab\\OneDrive\\Desktop\\thesis project\\front-end-react-website\\src\\reducers\\profiles.js",[],"C:\\Users\\aqrab\\OneDrive\\Desktop\\thesis project\\front-end-react-website\\src\\components\\ListItems\\EditItems.js",["126","127"],"import React, { useState ,useEffect} from 'react';\r\nimport {updateOrder} from '../../actions/index';\r\n\r\nimport { useDispatch,useSelector } from 'react-redux';\r\n\r\nconst EditItems = (props) => {\r\n    \r\n    const [orderData, setOrderData] = useState({  category: '', quantity: '', weight: '', description: ''});\r\n    const dispatch = useDispatch();\r\n    const currentId =props.match.params.id\r\n\r\nconst orders = useSelector(state => state.orders)\r\n\r\n    //we will use the useEffect to display the data\r\n    \r\n\r\n    // useEffect(  () => {\r\n      \r\n    //   dispatch(getALLItems());\r\n    //      }, [dispatch]);\r\n\r\n      const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n     \r\n          dispatch(updateOrder(currentId,orderData));\r\n         \r\n          window.location = '/SellerItems'\r\n\r\n        //   clear();\r\n        \r\n      };\r\n      \r\n\r\n      \r\n    return (\r\n        <div>\r\n        <h1>Form</h1>\r\n        <br />\r\n        <div className = \"container\">\r\n          <form className=\"text-center border border-light p-9\" action=\"#!\"  >\r\n            <p className=\"h4 mb-4\">Editing </p>\r\n            <br />\r\n                <div className=\"col\">\r\n                <label>Select Category</label>\r\n                <select\r\n                required=\"true\"\r\n                  className = \"form-control\"\r\n                   value = {orderData.category}\r\n                  onChange = {(e) => setOrderData({ ...orderData ,category : e.target.value})}\r\n                  text-align = \"center\"\r\n                 >\r\n                     <option value = \"Iron\">Iron</option>\r\n                    <option value = \"wood\">wood</option>\r\n                    <option value = \"glass\">glass</option>\r\n                    <option value = \"plastic\">plastic</option>\r\n                    </select>\r\n                    </div>\r\n                     <br />\r\n                <div className=\"col\">\r\n                <label>Quantity</label>\r\n                <input\r\n                required=\"true\"\r\n                  type = \"text\"\r\n                  className = \"form-control\"\r\n                   value = {orderData.quantity}\r\n                  onChange = {(e) => setOrderData({ ...orderData ,quantity : e.target.value})}\r\n                  text-align = \"center\"\r\n                  placeholder = \"Insert Quantity\"/>\r\n                </div>\r\n                <br />\r\n                <div className=\"col\">\r\n                <label>weight</label>\r\n                <input\r\n                required=\"true\"\r\n                  type = \"text\"\r\n                  className = \"form-control\"\r\n                   value = {orderData.weight}\r\n                  onChange = {(e) => setOrderData({ ...orderData ,weight : e.target.value})}\r\n                  text-align = \"center\"\r\n                  placeholder = \"Insert Wights\"/>\r\n                </div>\r\n                <br />\r\n                <div className = \"col\">\r\n                  <label>Description  </label>\r\n                  <input\r\n                    type = \"text\"\r\n                    required=\"true\"\r\n                    className = \"form-control\"\r\n                     value = {orderData.description}\r\n                  onChange = {(e) => setOrderData({ ...orderData ,description : e.target.value})}\r\n                    placeholder = \" Insert a description \"/>\r\n                </div>\r\n                <br />\r\n               \r\n              <br />\r\n                <div>\r\n                <button type=\"submit\" onClick= {onSubmit} className=\"btn btn-deep-orange darken-4\">Submit</button>\r\n                </div>\r\n                \r\n          </form>\r\n        </div>\r\n        </div>\r\n    )\r\n    \r\n}\r\nexport default EditItems;","C:\\Users\\aqrab\\OneDrive\\Desktop\\thesis project\\front-end-react-website\\src\\components\\Profile\\firbase.js",[],"C:\\Users\\aqrab\\OneDrive\\Desktop\\thesis project\\front-end-react-website\\src\\components\\Navbar\\itemsNav.js",[],"C:\\Users\\aqrab\\OneDrive\\Desktop\\thesis project\\front-end-react-website\\src\\components\\Navbar\\addNav.js",[],"C:\\Users\\aqrab\\OneDrive\\Desktop\\thesis project\\front-end-react-website\\src\\components\\Navbar\\profileNav.js",[],"C:\\Users\\aqrab\\OneDrive\\Desktop\\thesis project\\front-end-react-website\\src\\components\\Navbar\\homeNav.js",[],"C:\\Users\\aqrab\\OneDrive\\Desktop\\thesis project\\front-end-react-website\\src\\ProtectedRoute.js",["128"],"import React from 'react';\r\nimport {Route, Redirect} from 'react-router-dom' ;\r\nfunction ProtectedRoute({token: token, component: Component, ...rest}) {\r\n    return (<Route {...rest} render = {(props) => {\r\n   if (token) {\r\n       return <Component />\r\n   } else {\r\n       return ( <Redirect to = { {pathname: '/', state: {from: props.location}} }/> )\r\n     }\r\n    }}/>\r\n )     \r\n}\r\nexport default ProtectedRoute;","C:\\Users\\aqrab\\OneDrive\\Desktop\\thesis project\\front-end-react-website\\src\\components\\HomePage\\homepage.js",[],"C:\\Users\\aqrab\\OneDrive\\Desktop\\thesis project\\front-end-react-website\\src\\components\\View\\view.js",[],{"ruleId":"129","severity":1,"message":"130","line":1,"column":17,"nodeType":"131","messageId":"132","endLine":1,"endColumn":26},{"ruleId":"129","severity":1,"message":"133","line":2,"column":42,"nodeType":"131","messageId":"132","endLine":2,"endColumn":46},{"ruleId":"129","severity":1,"message":"134","line":2,"column":48,"nodeType":"131","messageId":"132","endLine":2,"endColumn":54},{"ruleId":"129","severity":1,"message":"135","line":10,"column":10,"nodeType":"131","messageId":"132","endLine":10,"endColumn":21},{"ruleId":"129","severity":1,"message":"136","line":11,"column":10,"nodeType":"131","messageId":"132","endLine":11,"endColumn":21},{"ruleId":"129","severity":1,"message":"137","line":12,"column":9,"nodeType":"131","messageId":"132","endLine":12,"endColumn":20},{"ruleId":"129","severity":1,"message":"138","line":17,"column":8,"nodeType":"131","messageId":"132","endLine":17,"endColumn":15},{"ruleId":"129","severity":1,"message":"139","line":27,"column":15,"nodeType":"131","messageId":"132","endLine":27,"endColumn":23},{"ruleId":"129","severity":1,"message":"140","line":28,"column":8,"nodeType":"131","messageId":"132","endLine":28,"endColumn":10},{"ruleId":"129","severity":1,"message":"141","line":28,"column":12,"nodeType":"131","messageId":"132","endLine":28,"endColumn":17},{"ruleId":"142","severity":1,"message":"143","line":11,"column":7,"nodeType":"144","messageId":"145","endLine":12,"endColumn":22},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","replacedBy":"149"},{"ruleId":null,"fatal":true,"severity":2,"message":"150","line":15,"column":12},{"ruleId":"129","severity":1,"message":"151","line":17,"column":21,"nodeType":"131","messageId":"132","endLine":17,"endColumn":32},{"ruleId":"152","severity":1,"message":"153","line":32,"column":59,"nodeType":"154","messageId":"155","endLine":32,"endColumn":61},{"ruleId":"156","severity":1,"message":"157","line":31,"column":17,"nodeType":"158","endLine":31,"endColumn":40},{"ruleId":"129","severity":1,"message":"159","line":1,"column":29,"nodeType":"131","messageId":"132","endLine":1,"endColumn":37},{"ruleId":"129","severity":1,"message":"160","line":5,"column":10,"nodeType":"131","messageId":"132","endLine":5,"endColumn":21},{"ruleId":"129","severity":1,"message":"161","line":17,"column":13,"nodeType":"131","messageId":"132","endLine":17,"endColumn":17},{"ruleId":"129","severity":1,"message":"161","line":30,"column":13,"nodeType":"131","messageId":"132","endLine":30,"endColumn":17},{"ruleId":"129","severity":1,"message":"161","line":52,"column":12,"nodeType":"131","messageId":"132","endLine":52,"endColumn":16},{"ruleId":"129","severity":1,"message":"130","line":1,"column":27,"nodeType":"131","messageId":"132","endLine":1,"endColumn":36},{"ruleId":"129","severity":1,"message":"162","line":12,"column":7,"nodeType":"131","messageId":"132","endLine":12,"endColumn":13},{"ruleId":"163","severity":1,"message":"164","line":3,"column":26,"nodeType":"165","messageId":"166","endLine":3,"endColumn":38,"fix":"167"},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Switch' is defined but never used.","'getALLItems' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'homeNav' is defined but never used.","'setToken' is assigned a value but never used.","'id' is assigned a value but never used.","'setID' is assigned a value but never used.","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","no-native-reassign",["168"],"no-negated-in-lhs",["169"],"Parsing error: Identifier 'savedUserData' has already been declared\n\n\u001b[0m \u001b[90m 13 | \u001b[39m   \u001b[90m////sigin up button\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 14 | \u001b[39m    \u001b[36mconst\u001b[39m [image\u001b[33m,\u001b[39m setUserImage] \u001b[33m=\u001b[39m useState(\u001b[36mnull\u001b[39m)\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 15 | \u001b[39m    \u001b[36mconst\u001b[39m [savedUserData\u001b[33m,\u001b[39m setSavedUserData] \u001b[33m=\u001b[39m useState({ email\u001b[33m:\u001b[39m \u001b[32m''\u001b[39m\u001b[33m,\u001b[39m password\u001b[33m:\u001b[39m \u001b[32m''\u001b[39m})\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 16 | \u001b[39m    \u001b[36mfunction\u001b[39m handleChangeImage(e){\u001b[0m\n\u001b[0m \u001b[90m 17 | \u001b[39m    e\u001b[33m.\u001b[39mpreventDefault()\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 18 | \u001b[39m      setUserImage( e\u001b[33m.\u001b[39mtarget\u001b[33m.\u001b[39mfiles[\u001b[35m0\u001b[39m])      \u001b[0m","'setLoggedin' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'updateOrder' is defined but never used.","'data' is assigned a value but never used.","'orders' is assigned a value but never used.","no-useless-rename","Destructuring assignment token unnecessarily renamed.","Property","unnecessarilyRenamed",{"range":"170","text":"171"},"no-global-assign","no-unsafe-negation",[105,117],"token"]